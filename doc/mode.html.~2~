<h1 class="focus">Mode</h1><p>Neomacs use modes to provide functionalities to buffers. Neomacs modes are <i>mixins</i>, i.e. CLOS classes that can be dynamically added to buffers. A Neomacs buffer always inherit from zero or more modes and the <code>buffer</code> class.</p><ul><li><span class="comma-expr"><div class="list"><span class="symbol" operator="">classdoc</span><span class="symbol">'mode</span></div></span></li></ul><p>Mixins mostly supersede buffer-local variables and hooks used in previous editors like Emacs and Hemlock. Modes can have slots, which are introduced to the buffers that enable them. Methods that specialize on a mode customize behavior of generic functions on buffers that enable the mode. Many generic functions (e.g. <code>on-*</code>) in Neomacs has a buffer as the first argument, which is suitable for specializing on modes. Many ordinary functions in Neomacs has a backing generic function which has a buffer as first argument, usually with name <code>*-aux</code>.</p><p>Functions that enable or disable modes in current buffer:</p><ul><li><span class="comma-expr"><div class="list"><span class="symbol" operator="">fundoc</span><span class="symbol">'enable</span></div></span></li><li><span class="comma-expr"><div class="list"><span class="symbol" operator="">fundoc</span><span class="symbol">'disable</span></div></span></li><li><span class="comma-expr"><div class="list"><span class="symbol" operator="">fundoc</span><span class="symbol">'toggle</span></div></span></li></ul><h2>D<span class="symbol">efining</span><span class="symbol">modes</span></h2><ul><li operator=""><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'define-mode</span></div></span></li></ul>