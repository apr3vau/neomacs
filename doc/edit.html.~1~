<h1 operator="">Editing</h1><h2>Editing primitives</h2><p>Lisp programs are expected to use the following primitives to edit the Neomacs DOM. These primitives provides <a href="positions.html">Positions</a>-based interface and handles text-node splitting and merging automatically. These primitives also maintain <a href="undo.html">Undo</a> history, update renderer-side DOM,  manage setup and destruction of observers and computed attributes, and allocate <code>neomacs-identifier</code>'s.</p><ul><li operator=""><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'delete-nodes</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'extract-nodes</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'insert-nodes</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'move-nodes</span></div></span></li></ul><h2>Compound editing operations</h2><p>Functions implemented using <a href="#editing-primitives">Editing primitives</a>, provided for convenience:</p><ul><li operator=""><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'splice-node</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'join-nodes</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'raise-node</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'split-node</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'wrap-node</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'delete-node</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'replace-node</span></div></span></li></ul><h2>Editing commands</h2><p>The following generic editing commands are avaliable in any Neomacs buffer:</p><ul><li operator=""><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'new-line</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'backward-delete</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'forward-delete</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'backward-delete-word</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'self-insert-command</span></div></span></li></ul><p><code operator="">self-insert-command</code> can be extended:<ul><li operator=""><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'self-insert-aux</span></div></span></li><li><span class="comma-expr" operator=""><div class="list" operator=""><span class="symbol" operator="">fundoc</span><span class="symbol">'self-insert-char</span></div></span></li></ul></p>