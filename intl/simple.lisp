(in-package #:neomacs)

(defvar *simple-input-method-map*
  (make-keymap 'simple-input-method-latin)
  "The keymap `simple-input-method' uses for translating key sequences.

Should bind key sequences to other key sequences.")

(defvar *simple-input-keys* nil
  "List of pending keys processed by `simple-input-method'.")

(define-keys simple-input-method-latin
  "dead-quote A" (kbd "Á")
  "dead-quote E" (kbd "É")
  "dead-quote I" (kbd "Í")
  "dead-quote O" (kbd "Ó")
  "dead-quote U" (kbd "Ú")
  "dead-quote Y" (kbd "Ý")
  "dead-quote a" (kbd "á")
  "dead-quote e" (kbd "é")
  "dead-quote i" (kbd "í")
  "dead-quote o" (kbd "ó")
  "dead-quote u" (kbd "ú")
  "dead-quote y" (kbd "ý")
  "dead-quote dead-quote" (kbd "´")
  "dead-quote space" (kbd "'")
  "dead-bracket-left A" (kbd "À")
  "dead-bracket-left E" (kbd "È")
  "dead-bracket-left I" (kbd "Ì")
  "dead-bracket-left O" (kbd "Ò")
  "dead-bracket-left U" (kbd "Ù")
  "dead-bracket-left a" (kbd "à")
  "dead-bracket-left e" (kbd "è")
  "dead-bracket-left i" (kbd "ì")
  "dead-bracket-left o" (kbd "ò")
  "dead-bracket-left u" (kbd "ù")
  "dead-bracket-left dead-bracket-left" (kbd "`")
  "dead-bracket-left space" (kbd "`")
  "S-dead-bracket-left A" (kbd "Â")
  "S-dead-bracket-left E" (kbd "Ê")
  "S-dead-bracket-left I" (kbd "Î")
  "S-dead-bracket-left O" (kbd "Ô")
  "S-dead-bracket-left U" (kbd "Û")
  "S-dead-bracket-left a" (kbd "â")
  "S-dead-bracket-left e" (kbd "ê")
  "S-dead-bracket-left i" (kbd "î")
  "S-dead-bracket-left o" (kbd "ô")
  "S-dead-bracket-left u" (kbd "û")
  "S-dead-bracket-left S-dead-bracket-left" (kbd "^")
  "S-dead-bracket-left S-dead-bracket-left" (kbd "^")
  "S-dead-quote A" (kbd "Ä")
  "S-dead-quote E" (kbd "Ë")
  "S-dead-quote I" (kbd "Ï")
  "S-dead-quote O" (kbd "Ö")
  "S-dead-quote U" (kbd "Ü")
  "S-dead-quote a" (kbd "ä")
  "S-dead-quote e" (kbd "ë")
  "S-dead-quote i" (kbd "ï")
  "S-dead-quote o" (kbd "ö")
  "S-dead-quote s" (kbd "ß")
  "S-dead-quote u" (kbd "ü")
  "S-dead-quote y" (kbd "ÿ")
  "S-dead-quote S-dead-quote" (kbd "?¨")
  "S-dead-quote space" (kbd "\""))

(defun simple-input-method (key)
  "A simple input method that translate key sequences."
  (alex:nconcf *simple-input-keys* (list key))
  (if-let (translation (lookup-keybind *simple-input-keys*
                                       (list *simple-input-method-map*)))
    (unless (prefix-command-p translation)
      (setf *simple-input-keys* nil)
      translation)
    (progn
      (setf *simple-input-keys* nil)
      (list key))))
